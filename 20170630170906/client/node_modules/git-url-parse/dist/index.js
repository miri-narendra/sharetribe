"use strict";

var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

function _typeof(e) {
  return e && "undefined" != typeof Symbol && e.constructor === Symbol ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof2(e);
}!function (e) {
  if ("object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module) module.exports = e();else if ("function" == typeof define && define.amd) define([], e);else {
    var r;r = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, r.gitUrlParse = e();
  }
}(function () {
  return function e(r, t, n) {
    function o(i, u) {
      if (!t[i]) {
        if (!r[i]) {
          var l = "function" == typeof require && require;if (!u && l) return l(i, !0);if (s) return s(i, !0);var f = new Error("Cannot find module '" + i + "'");throw f.code = "MODULE_NOT_FOUND", f;
        }var a = t[i] = { exports: {} };r[i][0].call(a.exports, function (e) {
          var t = r[i][1][e];return o(t ? t : e);
        }, a, a.exports, e, r, t, n);
      }return t[i].exports;
    }for (var s = "function" == typeof require && require, i = 0; i < n.length; i++) {
      o(n[i]);
    }return o;
  }({ 1: [function (e, r) {
      function t(e) {
        if ("string" != typeof e) throw new Error("The url must be a string.");var r = n(e),
            o = r.resource.split("."),
            s = null;switch (r.toString = function (e) {
          return t.stringify(this, e);
        }, r.source = o.length > 2 ? o.slice(-2).join(".") : r.source = r.resource, r.name = r.pathname.substring(1).replace(/\.git$/, ""), r.owner = r.user, r.organization = r.owner, r.source) {case "cloudforge.com":
            r.owner = r.user, r.organization = o[0];break;default:
            s = r.name.split("/"), 2 === s.length && (r.owner = s[0], r.name = s[1]);}return r.full_name = r.owner, r.name && (r.full_name && (r.full_name += "/"), r.full_name += r.name), r;
      }var n = e("git-up");t.stringify = function (e, r) {
        switch (r = r || e.protocol) {case "ssh":
            return "git@" + e.resource + ":" + e.full_name + ".git";case "git+ssh":
            return "git+ssh://git@" + e.resource + "/" + e.full_name + ".git";case "http":case "https":
            return r + "://" + e.resource + "/" + e.full_name;default:
            return e.href;}
      }, r.exports = t;
    }, { "git-up": 2 }], 2: [function (e, r) {
      function t(e) {
        var r = n(e);r.token = "";var t = r.user.split(":");return 2 === t.length && ("x-oauth-basic" === t[1] ? r.token = t[0] : "x-token-auth" === t[0] && (r.token = t[1])), r.protocol = o(r.protocols) || o(e) ? "ssh" : r.protocols.length ? r.protocols[0] : "file", r;
      }var n = e("parse-url"),
          o = e("is-ssh");r.exports = t;
    }, { "is-ssh": 3, "parse-url": 4 }], 3: [function (e, r) {
      function t(e) {
        if (Array.isArray(e)) return -1 !== e.indexOf("ssh") || -1 !== e.indexOf("rsync");if ("string" != typeof e) return !1;var r = n(e);return e = e.substring(e.indexOf("://") + 3), t(r) ? !0 : e.indexOf("@") < e.indexOf(":");
      }var n = e("protocols");r.exports = t;
    }, { protocols: 5 }], 4: [function (e, r) {
      function t(e) {
        var r = { protocols: n(e), protocol: null, port: null, resource: "", user: "", pathname: "", hash: "", search: "", href: e },
            t = e.indexOf("://"),
            s = null,
            i = null;return r.protocol = r.protocols[0] || (o(e) ? "ssh" : "file"), -1 !== t && (e = e.substring(t + 3)), i = e.split("/"), r.resource = i.shift(), s = r.resource.split("@"), 2 === s.length && (r.user = s[0], r.resource = s[1]), s = r.resource.split(":"), 2 === s.length && (r.resource = s[0], r.port = parseInt(s[1]), isNaN(r.port) && (r.port = null, i.unshift(s[1]))), i = i.filter(Boolean), r.pathname = "/" + i.join("/"), s = r.pathname.split("#"), 2 === s.length && (r.pathname = s[0], r.hash = s[1]), s = r.pathname.split("?"), 2 === s.length && (r.pathname = s[0], r.search = s[1]), r;
      }var n = e("protocols"),
          o = e("is-ssh");r.exports = t;
    }, { "is-ssh": 3, protocols: 5 }], 5: [function (e, r) {
      r.exports = function (e, r) {
        r === !0 && (r = 0);var t = e.indexOf("://"),
            n = e.substring(0, t).split("+").filter(Boolean);return "number" == typeof r ? n[r] : n;
      };
    }, {}] }, {}, [1])(1);
});